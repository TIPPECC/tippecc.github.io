{"version":3,"file":"CvHqqkMw.js","sources":["../../../../../../src/routes/store/tempresult_store.ts","../../../../../../src/lib/icons/select-multiple-svgrepo-com.svg","../../../../../../src/lib/tempresults/folderytpe_chooser.svelte","../../../../../../src/lib/LoadingRing.svelte"],"sourcesContent":["// src/stores/content.js\nimport { writable } from 'svelte/store';\nimport { browser } from '$app/environment';\n\ninterface Tempresult_selection {\n\tfilename: string;\n\tfoldertype: string;\n}\n\nexport var content: any;\nexport var tempresult_selection: any;\n\nif (browser) {\n\t// Get the value out of storage on load.\n\tconst stored = localStorage.content;\n\t// or localStorage.getItem('content')\n\n\t// Set the stored value or a sane default.\n\tcontent = writable(stored || 'HELLO WORLD!');\n\ttempresult_selection = writable<Tempresult_selection>(\n\t\tJSON.parse(localStorage.getItem('tempresult_selection'))\n\t);\n\n\ttempresult_selection.subscribe(\n\t\t(value) => (localStorage.tempresult_selection = JSON.stringify(value))\n\t);\n\n\t// Anytime the store changes, update the local storage value.\n\tcontent.subscribe((value) => (localStorage.content = value));\n\t// or localStorage.setItem('content', value)\n}\n","export default \"data:image/svg+xml,%3c!DOCTYPE%20svg%20PUBLIC%20'-//W3C//DTD%20SVG%201.1//EN'%20'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3c!--%20Uploaded%20to:%20SVG%20Repo,%20www.svgrepo.com,%20Transformed%20by:%20SVG%20Repo%20Mixer%20Tools%20--%3e%3csvg%20width='800px'%20height='800px'%20viewBox='0%200%2024%2024'%20fill='none'%20xmlns='http://www.w3.org/2000/svg'%3e%3cg%20id='SVGRepo_bgCarrier'%20stroke-width='0'/%3e%3cg%20id='SVGRepo_tracerCarrier'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3cg%20id='SVGRepo_iconCarrier'%3e%3cg%20id='Edit%20/%20Select_Multiple'%3e%3cpath%20id='Vector'%20d='M3%209V19.4C3%2019.9601%203%2020.2399%203.10899%2020.4538C3.20487%2020.642%203.35774%2020.7952%203.5459%2020.8911C3.7596%2021%204.0395%2021%204.59846%2021H15.0001M17%208L13%2012L11%2010M7%2013.8002V6.2002C7%205.08009%207%204.51962%207.21799%204.0918C7.40973%203.71547%207.71547%203.40973%208.0918%203.21799C8.51962%203%209.08009%203%2010.2002%203H17.8002C18.9203%203%2019.4801%203%2019.9079%203.21799C20.2842%203.40973%2020.5905%203.71547%2020.7822%204.0918C21.0002%204.51962%2021.0002%205.07969%2021.0002%206.19978L21.0002%2013.7998C21.0002%2014.9199%2021.0002%2015.48%2020.7822%2015.9078C20.5905%2016.2841%2020.2842%2016.5905%2019.9079%2016.7822C19.4805%2017%2018.9215%2017%2017.8036%2017H10.1969C9.07899%2017%208.5192%2017%208.0918%2016.7822C7.71547%2016.5905%207.40973%2016.2842%207.21799%2015.9079C7%2015.4801%207%2014.9203%207%2013.8002Z'%20stroke='%23ffffff'%20stroke-width='2'%20stroke-linecap='round'%20stroke-linejoin='round'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e\"","<script lang=\"ts\">\n\timport { createEventDispatcher } from 'svelte';\n\timport folder_types from './folder_types.json';\n\timport selected from '$lib/icons/select-multiple-svgrepo-com.svg';\n\n\texport var filter: string = '';\n\texport var foldertype: string = 'CORDEX_raw_ind';\n\texport let filter_by_status: string = 'public';\n\tconsole.log('Status: ', filter_by_status);\n\tlet current_category: string = foldertype.split('_')[0];\n\n\t//set_filter(current_category);\n\n\tvar foldertypes: {\n\t\tkey: string;\n\t\tdisplay_name: string;\n\t\tdescription: string;\n\t\tcitation: string;\n\t\theader_regex: string;\n\t\tlineage: string;\n\t\tstatus: string;\n\t}[] = folder_types;\n\tconst foldertypes_full = foldertypes;\n\t// filter out the folder types that are not relevant\n\tconsole.log('Filter: ', filter_by_status);\n\tfoldertypes = foldertypes\n\t\t.filter((x) => x.key.startsWith(filter))\n\t\t.filter((x) => x.status == filter_by_status || x.status == 'public');\n\n\tlet categories: string[] = [];\n\tfor (let x = 0; x < foldertypes.length; x++) {\n\t\tlet cat = foldertypes[x].key.split('_')[0];\n\t\tif (!categories.includes(cat)) {\n\t\t\tcategories.push(cat);\n\t\t}\n\t}\n\tconst dispatch = createEventDispatcher();\n\tlet current_foldertype = {};\n\tfoldertypes = foldertypes_full.filter((x) => x.key.startsWith(current_category));\n\n\tfunction set_foldertype(new_type: string) {\n\t\tfor (let x = 0; x < foldertypes.length; x++) {\n\t\t\tif (new_type == foldertypes[x].key) {\n\t\t\t\tconsole.log('NEW: ', new_type, ' ftype: ', foldertypes[x].key);\n\t\t\t\tfoldertype = new_type;\n\t\t\t\tdispatch('foldertype_changed', foldertype);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// default\n\t\tfoldertype = foldertypes[0].key;\n\t\tcurrent_foldertype = foldertypes[0];\n\t\tdispatch('foldertype_changed', foldertype);\n\t}\n\n\tfunction set_filter(filter: string) {\n\t\tfoldertypes = foldertypes_full.filter((x) => x.key.startsWith(filter));\n\t\tcurrent_category = filter;\n\t}\n</script>\n\n<!-- Backend Folder Content as checkboxes -->\n<div class=\"pl-4 pb-2 bg-surface-700\">\n\t<div class=\"mb-4 mt-2 text-lg font-semibold\">\n\t\t<h3>Model Family or Region</h3>\n\n\t\t<div class=\"text-sm ml-2\">Select the model family or the region you want to explore.</div>\n\t\t<div class=\"flow gap-2 items-center\">\n\t\t\t{#each categories as cat}\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tclass=\"btn-sm bg-[#873c07] m-1 text-lg rounded-md hover:bg-tertiary-500 {current_category ==\n\t\t\t\t\tcat\n\t\t\t\t\t\t? 'font-bold bg-[#873c07] underline text-white'\n\t\t\t\t\t\t: ''}\"\n\t\t\t\t\ton:click={() => set_filter(cat)}>{cat.replace('CORDEX', 'CORDEX-CORE (RCM)').replace('CMIP6', 'CMIP6 (GCM)')}</button\n\t\t\t\t>\n\t\t\t{/each}\n\t\t</div>\n\t</div>\n</div>\n<div class=\"pl-4 pb-2 bg-surface-700 mt-2\">\n\t<div class=\"mb-4 mt-2 text-lg font-semibold\">\n\t\t<h3>Type of Dataset</h3>\n\t\t<div class=\"text-sm ml-2 pb-2\">\n\t\t\tSelect the type of data you want to explore. Raw (model output) or bias-adjusted. Variables or indicators. Î£\n\t\t\tcontain yearly, monthly, and seasonal aggregates as well as averages over 20/30-year periods.\n\t\t</div>\n\t\t{#each foldertypes as ftype}\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tclass=\"btn-sm bg-[#b05803] m-1 text-lg rounded-md hover:bg-tertiary-500 {foldertype ==\n\t\t\t\tftype.key\n\t\t\t\t\t? 'font-bold bg-[#b05803] underline text-white'\n\t\t\t\t\t: ''}\"\n\t\t\t\ton:click={() => set_foldertype(ftype.key)}\n\t\t\t\t>{ftype.display_name.replace(current_category, '').replace('-CORE', '')}</button\n\t\t\t>\n\t\t{/each}\n\t</div>\n</div>\n<div class=\"mt-6\">\n\t<div class=\"flex ml-2\">\n\t\t<span><img src={selected} alt=\"...\" width=\"30px\" class=\"mr-1\" /></span>\n\t\t<h1 class=\"h4\">\n\t\t\t{foldertypes.find((x) => x.key == foldertype)?.display_name ?? 'Please select'}\n\t\t</h1>\n\t</div>\n\t<li class=\"text-sm ml-10\">\n\t\t{foldertypes.find((x) => x.key == foldertype)?.description ?? 'No description available'}\n\t</li>\n\t<li class=\"text-sm ml-10\">\n\t\t{foldertypes.find((x) => x.key == foldertype)?.lineage ?? 'No lineage available'}\n\t</li>\n\t<li class=\"text-sm ml-10\">\n\t\tCite as: {foldertypes.find((x) => x.key == foldertype)?.citation ?? 'No citation available'}\n\t</li>\n</div>\n\n<style>\n\t.content-blockquote {\n\t\tborder-left: 0px solid #93989a;\n\t\tpadding-left: 2rem;\n\t\tmargin-bottom: 1rem;\n\t}\n\n\t.content-blockquote h3 {\n\t\tmargin-top: 0;\n\t}\n\n\t.btn-sm {\n\t\tpadding: 0.25rem 0.5rem;\n\t\tfont-size: 0.875rem;\n\t}\n</style>\n","<script>\n\t// code from:\n\t// https://github.com/thetrisatria/svelte-loading-animation/blob/master/src/Ring.svelte\n\n\texport let size = '64px';\n\texport let color = '#10b981';\n</script>\n\n<div class=\"loadingRing\" style=\"--color:{color};--size:{size}\">\n\t<div />\n\t<div />\n\t<div />\n\t<div />\n</div>\n\n<style>\n\t.loadingRing {\n\t\tposition: relative;\n\t\tdisplay: inline-flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: var(--size);\n\t\theight: var(--size);\n\t}\n\t.loadingRing div {\n\t\twidth: calc(var(--size) * 0.8);\n\t\theight: calc(var(--size) * 0.8);\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\tmargin: 4px;\n\t\tborder: calc(var(--size) * 0.125) solid var(--color);\n\t\tborder-radius: 50%;\n\t\tborder-color: var(--color) transparent transparent transparent;\n\t\tanimation: rotate 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n\t}\n\t.loadingRing div:nth-child(1) {\n\t\tanimation-delay: -0.45s;\n\t}\n\t.loadingRing div:nth-child(2) {\n\t\tanimation-delay: -0.3s;\n\t}\n\t.loadingRing div:nth-child(3) {\n\t\tanimation-delay: -0.15s;\n\t}\n\t@keyframes rotate {\n\t\t0% {\n\t\t\ttransform: rotate(0deg);\n\t\t}\n\t\t100% {\n\t\t\ttransform: rotate(360deg);\n\t\t}\n\t}\n</style>\n"],"names":["content","tempresult_selection","stored","writable","value","selected","ctx","attr","button","button_class_value","insert_hydration","target","anchor","dirty","t_value","set_data","t","t11_value","_a","t13_value","_b","t15_value","_c","t18_value","_d","i","div3","append_hydration","div2","h30","div0","div1","div6","div5","h31","div4","div8","div7","span","h1","li0","li1","li2","t11","t13","t15","t18","filter","$$props","foldertype","filter_by_status","current_category","foldertypes","folder_types","foldertypes_full","x","categories","cat","dispatch","createEventDispatcher","set_foldertype","new_type","set_filter","$$invalidate","click_handler","ftype","func","func_1","func_2","func_3","size","color"],"mappings":"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"}